local isAnimating = false -- Variável para controlar a animação
local screenGui  -- Armazena a GUI para ser destruída depois
local animationThread -- Armazena a thread da animação
local Functions = {} -- Tabela para armazenar funções

local function createScreenGui()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local gui = Instance.new("ScreenGui")
    gui.Parent = playerGui
    return gui
end

local function createAnimatedGif(parent)
    local gif = Instance.new("ImageLabel")
    gif.Size = UDim2.new(0, 200, 0, 200) -- Tamanho fixo de 200x200
    gif.Position = UDim2.new(0.5, -100, 0.5, -100) -- Centraliza corretamente
    gif.BackgroundTransparency = 1
    gif.Parent = parent

    local frames = { -- IDs das imagens de cada frame do GIF
        "rbxassetid://82742344232916",
        "rbxassetid://115879839538103",
        "rbxassetid://73901297094834",
        "rbxassetid://121552141717974",
    }

    isAnimating = true -- Marca a animação como ativa

    animationThread = task.spawn(function() -- Inicia a animação em uma thread separada
        local frameIndex = 1
        while isAnimating do
            gif.Image = frames[frameIndex]
            frameIndex = (frameIndex % #frames) + 1
            task.wait(0.1) -- Tempo entre os frames
        end
    end)

    return gif
end

function Functions.StartAnimation()
    if isAnimating then return end -- Evita múltiplas execuções

    screenGui = createScreenGui()
    createAnimatedGif(screenGui)
    wait(3)
end

function Functions.StopAnimation()
    isAnimating = false -- Para o loop da animação

    if animationThread then
        task.cancel(animationThread) -- Cancela a execução da animação
    end

    if screenGui then
        screenGui:Destroy() -- Remove a GUI da tela
        screenGui = nil
    end
end

return Functions
